{"version":3,"sources":["ng2-range-points.ts"],"names":[],"mappings":"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","file":"ng2-range-points.js","sourcesContent":["import { Component, Output, EventEmitter, ViewChild, OnInit, Input } from '@angular/core'\r\nimport { Observable } from 'rxjs/Observable'\r\n\r\nexport interface RangePointsOptions {\r\n    offset: number\r\n    step: number\r\n    threshold: number\r\n    min?: number\r\n    max?: number\r\n    th?: any\r\n    breakPointCreator?: (value: number) => RangeBreakpoint\r\n}\r\n\r\nexport class RangeBreakpoint {\r\n\r\n    onChanged = new EventEmitter()\r\n\r\n    constructor(\r\n        public value: number\r\n    ) { }\r\n\r\n    getLabel(): string {\r\n        return this.value + ''\r\n    }\r\n\r\n    onCollide(other: RangeBreakpoint): void {\r\n\r\n    }\r\n\r\n}\r\n\r\ndeclare var __moduleName: string\r\n\r\n@Component({\r\n    selector: \"ng2-range-points\",\r\n    moduleId: __moduleName,\r\n    templateUrl: 'ng2-range-points.html',\r\n    styleUrls: ['ng2-range-points.css']\r\n})\r\nexport class RangePoints implements OnInit {\r\n\r\n    @ViewChild('slider') slider\r\n\r\n    @Input() options\r\n    @Input() breakpoints\r\n    @Output() focusItem: EventEmitter<any> = new EventEmitter()\r\n\r\n    holding = -1\r\n    maxValue: number\r\n    minValue: number\r\n\r\n    ngOnInit() {\r\n        this._updateMinMax()\r\n        document.addEventListener('mouseout', (evt) => {\r\n            if (this.holding < 0) return\r\n\r\n            if (evt.relatedTarget) {\r\n                let elName = (<HTMLElement>evt.relatedTarget).nodeName.toLowerCase()\r\n                if (elName == 'body' || elName == 'html') this.release(evt)\r\n                return\r\n            }\r\n\r\n            if (evt.target) {\r\n                let elName = (<HTMLElement>evt.target).nodeName.toLowerCase()\r\n                if (elName == 'body' || elName == 'html') this.release(evt)\r\n                return\r\n            }\r\n        })\r\n        document.addEventListener('mousemove', (evt) => this.move(evt))\r\n        document.addEventListener('mouseup', (evt) => this.release(evt))\r\n    }\r\n\r\n    hold(e) {\r\n        e.preventDefault()\r\n        let pos = (e.type == 'touchstart' ? e.changedTouches[0].clientX : e.clientX)\r\n        let value = this._getValue(pos)\r\n\r\n        let point = this._getPosition(value)\r\n        let off = 1\r\n        let j = -1\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let p = this._getPosition(this.breakpoints[i].value)\r\n            if (Math.abs(point - p) < off) {\r\n                off = Math.abs(point - p)\r\n                j = i\r\n            }\r\n        }\r\n        if (off > this._getTreshold()) {\r\n            let rect = this.slider.nativeElement.getBoundingClientRect()\r\n            pos = (pos - rect.left) / rect.width\r\n\r\n            if (value < this.minValue) {\r\n                let min = this._getBarMin(this.minValue)\r\n                let max = this.minValue\r\n                for (let i = 0; i < 50; i++) {\r\n                    value = (max + min) / 2\r\n                    let newPos = (value - this._getBarMin(value)) / (this._getBarMax(this.maxValue) - this._getBarMin(value))\r\n                    if (newPos > pos) {\r\n                        max = value\r\n                        min = this._getBarMin(value)\r\n                    } else {\r\n                        min = value\r\n                    }\r\n                }\r\n                value = this._round(value)\r\n            } else if (value > this.maxValue) {\r\n                let min = this.maxValue\r\n                let max = this._getBarMax(this.maxValue)\r\n                for (let i = 0; i < 50; i++) {\r\n                    value = (max + min) / 2\r\n                    let newPos = (value - this._getBarMin(this.minValue)) / (this._getBarMax(value) - this._getBarMin(this.minValue))\r\n                    if (newPos < pos) {\r\n                        min = value\r\n                        max = this._getBarMax(value)\r\n                    } else {\r\n                        max = value\r\n                    }\r\n                }\r\n                value = this._round(value)\r\n            }\r\n\r\n            j = this.breakpoints.length\r\n            this._createBreakpoint(value)\r\n            this._updateMinMax()\r\n        }\r\n\r\n        if (j >= 0) this.focusItem.emit(this.breakpoints[j])\r\n\r\n        this.holding = j\r\n    }\r\n\r\n    release(e) {\r\n        e.preventDefault()\r\n        if (this.holding >= 0)\r\n            for (let i = this.breakpoints.length - 1; i >= 0; i--)\r\n                if ((this.breakpoints[i].value == this.breakpoints[this.holding].value) && (i != this.holding)) {\r\n                    this.breakpoints[i].onCollide(this.breakpoints[this.holding])\r\n                    this.breakpoints.splice(i, 1)\r\n                    this._updateMinMax()\r\n                    break\r\n                }\r\n\r\n        this.holding = -1\r\n    }\r\n\r\n    move(e) {\r\n        if (this.holding < 0) return\r\n        e.preventDefault()\r\n        this.breakpoints[this.holding].value = this._getValue(e.type == 'mousemove' ? e.clientX : e.changedTouches[0].clientX)\r\n        this._updateMinMax()\r\n    }\r\n\r\n    _getValue(x) {\r\n        let rect = this.slider.nativeElement.getBoundingClientRect()\r\n        let relative = (x - rect.left) / rect.width\r\n        relative = Math.min(1, Math.max(0, relative))   // snap to range [0 .. 1]\r\n        let value = this._round(this._getBarMin(this.minValue) + relative * (this._getBarMax(this.maxValue) - this._getBarMin(this.minValue)))\r\n        return value\r\n    }\r\n\r\n    _getPosition(value) {\r\n        return (value - this._getBarMin(this.minValue)) / (this._getBarMax(this.maxValue) - this._getBarMin(this.minValue))\r\n    }\r\n\r\n    getIndex(value) {\r\n        return Math.round(1000 * this._getPosition(value))\r\n    }\r\n\r\n    _getTreshold() {\r\n        let rect = this.slider.nativeElement.getBoundingClientRect()\r\n        return this.options.threshold / rect.width\r\n    }\r\n\r\n    _round(val) {\r\n        return parseFloat((this.options.step * Math.round(val / this.options.step)).toPrecision(10))\r\n    }\r\n\r\n    _getBarMax(value) {\r\n        if (typeof this.options.max == \"number\") return Math.min(this.options.max, value + this.options.offset)\r\n        return value + this.options.offset\r\n    }\r\n\r\n    _getBarMin(value) {\r\n        if (typeof this.options.min == \"number\") return Math.max(this.options.min, value - this.options.offset)\r\n        return value - this.options.offset\r\n    }\r\n\r\n    _updateMinMax() {\r\n        if (this.breakpoints.length < 1) {\r\n            if (typeof this.options.min == \"number\" && typeof this.options.max == \"number\")\r\n                return this.minValue = this.maxValue = (this.options.min + this.options.max) / 2\r\n\r\n            if (typeof this.options.min == \"number\") return this.minValue = this.maxValue = this.options.min\r\n\r\n            if (typeof this.options.max == \"number\") return this.minValue = this.maxValue = this.options.max\r\n\r\n            return this.minValue = this.maxValue = 0\r\n        }\r\n\r\n        let min = this.breakpoints[0].value, max = min\r\n        for (let i = 1; i < this.breakpoints.length; i++) {\r\n            if (this.breakpoints[i].value < min)\r\n                min = this.breakpoints[i].value\r\n            if (this.breakpoints[i].value > max)\r\n                max = this.breakpoints[i].value\r\n        }\r\n        this.minValue = min\r\n        this.maxValue = max\r\n    }\r\n\r\n    _createBreakpoint(value: number) {\r\n        let bp: RangeBreakpoint\r\n        if (typeof this.options.breakPointCreator == 'function')\r\n            bp = this.options.breakPointCreator(value)\r\n        else\r\n            bp = this.breakpoints.push(new RangeBreakpoint(value))\r\n\r\n        bp.onChanged.subscribe(() => this._updateMinMax())\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}